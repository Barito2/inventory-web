[{"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/index.js":"1","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/App.js":"2","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reportWebVitals.js":"3","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/configs/route.js":"4","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/configs/store.js":"5","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/index.js":"6","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/index.js":"7","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/index.js":"8","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/unit.js":"9","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/unit.js":"10","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/index.js":"11","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/error/index.js":"12","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/configs/api.js":"13","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/constants/action.js":"14","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/UnitForm.js":"15","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/UnitList.js":"16","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/error/Error.js":"17","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/Container.js":"18","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/BackComponent.js":"19","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/actions/unit.js":"20","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/Paginate.js":"21","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/index.js":"22","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/SuccessComponent.js":"23","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/NavbarComponent.js":"24","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/AddComponent.js":"25","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/ReloadComponent.js":"26","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/index.js":"27","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/ItemList.js":"28","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/item.js":"29","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/item.js":"30","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/actions/item.js":"31","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/ItemForm.js":"32","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/UnitTable.js":"33","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/ItemTable.js":"34","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/EditComponent.js":"35","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/DeleteComponent.js":"36","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/index.js":"37","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/StockList.js":"38","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/StockForm.js":"39","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/stock.js":"40","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/stock.js":"41","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/actions/stock.js":"42","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/StockTable.js":"43","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/CoroselComponent.js":"44","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/validations/CodeValidation.js":"45"},{"size":497,"mtime":1612434579027,"results":"46","hashOfConfig":"47"},{"size":798,"mtime":1612519758927,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1611927061490,"results":"49","hashOfConfig":"47"},{"size":1213,"mtime":1612581510544,"results":"50","hashOfConfig":"47"},{"size":341,"mtime":1611933499473,"results":"51","hashOfConfig":"47"},{"size":250,"mtime":1612581489148,"results":"52","hashOfConfig":"47"},{"size":555,"mtime":1612494376168,"results":"53","hashOfConfig":"47"},{"size":667,"mtime":1612494117552,"results":"54","hashOfConfig":"47"},{"size":2678,"mtime":1612427146053,"results":"55","hashOfConfig":"47"},{"size":3174,"mtime":1612430578938,"results":"56","hashOfConfig":"47"},{"size":97,"mtime":1612581481620,"results":"57","hashOfConfig":"47"},{"size":33,"mtime":1611928208924,"results":"58","hashOfConfig":"47"},{"size":362,"mtime":1611933640412,"results":"59","hashOfConfig":"47"},{"size":2289,"mtime":1612705129434,"results":"60","hashOfConfig":"47"},{"size":3142,"mtime":1612581816365,"results":"61","hashOfConfig":"47"},{"size":2231,"mtime":1612494657267,"results":"62","hashOfConfig":"47"},{"size":181,"mtime":1611928150648,"results":"63","hashOfConfig":"47"},{"size":481,"mtime":1612110735767,"results":"64","hashOfConfig":"47"},{"size":269,"mtime":1612345537801,"results":"65","hashOfConfig":"47"},{"size":485,"mtime":1612233511935,"results":"66","hashOfConfig":"47"},{"size":577,"mtime":1612340968717,"results":"67","hashOfConfig":"47"},{"size":593,"mtime":1612517507045,"results":"68","hashOfConfig":"47"},{"size":162,"mtime":1612345562639,"results":"69","hashOfConfig":"47"},{"size":669,"mtime":1612493253806,"results":"70","hashOfConfig":"47"},{"size":394,"mtime":1612445644105,"results":"71","hashOfConfig":"47"},{"size":408,"mtime":1612445654751,"results":"72","hashOfConfig":"47"},{"size":97,"mtime":1612360804963,"results":"73","hashOfConfig":"47"},{"size":3033,"mtime":1612520170886,"results":"74","hashOfConfig":"47"},{"size":3070,"mtime":1612430681066,"results":"75","hashOfConfig":"47"},{"size":2682,"mtime":1612433440909,"results":"76","hashOfConfig":"47"},{"size":667,"mtime":1612705329768,"results":"77","hashOfConfig":"47"},{"size":4094,"mtime":1612685426141,"results":"78","hashOfConfig":"47"},{"size":3489,"mtime":1612454706710,"results":"79","hashOfConfig":"47"},{"size":3807,"mtime":1612704954513,"results":"80","hashOfConfig":"47"},{"size":409,"mtime":1612449105310,"results":"81","hashOfConfig":"47"},{"size":441,"mtime":1612451122972,"results":"82","hashOfConfig":"47"},{"size":102,"mtime":1612493037769,"results":"83","hashOfConfig":"47"},{"size":2333,"mtime":1612508683916,"results":"84","hashOfConfig":"47"},{"size":3888,"mtime":1612581856369,"results":"85","hashOfConfig":"47"},{"size":2728,"mtime":1612496395640,"results":"86","hashOfConfig":"47"},{"size":3099,"mtime":1612494296976,"results":"87","hashOfConfig":"47"},{"size":493,"mtime":1612493622637,"results":"88","hashOfConfig":"47"},{"size":3506,"mtime":1612516559434,"results":"89","hashOfConfig":"47"},{"size":1638,"mtime":1612520096937,"results":"90","hashOfConfig":"47"},{"size":310,"mtime":1612579731738,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"12xcog3",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/index.js",[],["192","193"],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/App.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reportWebVitals.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/configs/route.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/configs/store.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/unit.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/unit.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/error/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/configs/api.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/constants/action.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/UnitForm.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/UnitList.js",["194","195","196","197","198","199","200"],"import React, { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { findAll, removeById } from '../../actions/unit'\nimport { Link } from 'react-router-dom'\nimport swal from 'sweetalert';\nimport { Container, successComponent, AddComponent, ReloadComponent } from \"../../components\";\nimport UnitTable from \"./UnitTable\";\n\n\nfunction UnitList({\n    units, isLoading, isRemoved, error\n    , findAll, removeById\n    , savedUnit\n}) {\n    console.log(units);\n\n    const onReloadPage = () => {\n        findAll()\n    }\n\n    const onDelete = (id) => {\n        removeById(id)\n    }\n\n    const validationDelete = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover data id: \" + id,\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    onDelete(id)\n                } else {\n                    swal(\"Cancel deleted!\");\n                }\n            });\n    }\n\n    useEffect(() => {\n        onReloadPage()\n    }, [])\n\n    useEffect(() => {\n        if (savedUnit) {\n            successComponent()\n        }\n    }, [savedUnit])\n\n    useEffect(() => {\n        if (isRemoved) {\n            successComponent()\n            onReloadPage()\n        }\n    }, [error, isRemoved, findAll])\n\n    return (\n        <Container error={error}>\n            <div className=\"mt-3\">\n                <h1>\n                    Unit List\n                </h1>\n\n                <UnitTable units={units} onDeleted={validationDelete} isLoading={isLoading} onReload={onReloadPage} />\n            </div>\n        </Container >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRemoved: state.removeUnitById.data,\n        units: state.findAllUnit.data || [],\n        savedUnit: state.saveUnit.data,\n        isLoading: state.findAllUnit.isLoading || state.removeUnitById.loading,\n        error: state.findAllUnit.error || state.removeUnitById.error,\n    }\n}\n\n\nconst mapDispatchToProps = { findAll, removeById }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitList)\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/error/Error.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/Container.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/BackComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/actions/unit.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/Paginate.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/SuccessComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/NavbarComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/AddComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/ReloadComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/ItemList.js",["201","202","203","204","205","206","207","208","209"],"import React, { useEffect, useState } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { findAll, removeById } from '../../actions/item'\nimport { Link } from 'react-router-dom'\nimport swal from 'sweetalert';\nimport { Container, Paginate, successComponent, AddComponent, ReloadComponent } from \"../../components\";\nimport ItemTable from \"./ItemTable\";\n\n// function ItemRow({ index, data, onDeleted }) {\n//     return (\n//         <tr>\n//             <td style={{ width: \"5%\" }}> {Number(index) + 1} </td>\n//             <td> {data.name} </td>\n//             <td> {data.price} </td>\n//             <td>\n//                 <Link className=\"btn btn-warning mr-2\" to={`/item/${data.id}/edit`}> Edit </Link>\n//                 <button onClick={onDeleted} className=\"btn btn-danger\"> Delete </button>\n//             </td>\n//         </tr>\n//     )\n// }\n\nfunction ItemList({\n    items, isLoading, isRemoved, error\n    , findAll, removeById\n    , savedItem\n}) {\n\n    // const [activePage, setActivePage] = useState(1)\n\n    // const onReloadWithpage = (page) => {\n    //     findAll({\n    //         page: page\n    //     })\n    // }\n\n    const onReloadPage = () => {\n        findAll()\n    }\n\n    const onDelete = (id) => {\n        removeById(id)\n    }\n\n    const validationDelete = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover data id: \" + id,\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    onDelete(id)\n                } else {\n                    swal(\"Cancel deleted!\");\n                }\n            });\n    }\n\n    // const handlePageChange = (pageNumber) => {\n    //     setActivePage(pageNumber);\n    //     onReloadWithpage(pageNumber - 1)\n    // }\n\n    useEffect(() => {\n        onReloadPage()\n    }, [])\n\n    useEffect(() => {\n        if (savedItem) {\n            successComponent()\n        }\n    }, [savedItem])\n\n\n    useEffect(() => {\n        if (isRemoved) {\n            successComponent()\n            onReloadPage()\n        }\n    }, [error, isRemoved, findAll])\n\n\n    return (\n        <Container error={error}>\n            <div className=\"mt-3\">\n                <h1>\n                    Item List\n                </h1>\n\n                <ItemTable items={items} onDeleted={validationDelete} isLoading={isLoading} onReload={onReloadPage} />\n            </div>\n        </Container >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRemoved: state.removeItemById.data,\n        items: state.findAllItem.data || [],\n        savedItem: state.saveItem.data,\n        isLoading: state.findAllItem.isLoading || state.removeItemById.loading,\n        error: state.findAllItem.error || state.removeItemById.error,\n    }\n}\n\n\nconst mapDispatchToProps = { findAll, removeById }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList)\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/item.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/item.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/actions/item.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/ItemForm.js",["210","211"],"import React, { useState, useEffect } from 'react'\nimport { Redirect, useHistory, useParams } from 'react-router-dom'\nimport { findById, save } from \"../../actions/item\"\nimport { findAll as allUnit } from \"../../actions/unit\"\nimport { Form } from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { BackComponent } from \"../../components\";\n\nconst ItemForm = ({\n    isLoading, item, units, savedItem,\n    findById, save, allUnit\n}) => {\n\n    const { id } = useParams();\n    const [data, setData] = useState({})\n    const [redirect] = useState(false)\n    const history = useHistory();\n\n    console.log(data);\n\n    const reloadUnit = (id) => {\n        findById(parseInt(id))\n        allUnit()\n    }\n\n    useEffect(() => {\n        reloadUnit()\n    }, [])\n\n    useEffect(() => {\n        if (id) {\n            reloadUnit(id)\n        }\n    }, [id, findById])\n\n    useEffect(() => {\n        //check if there is id and Item; if id exist then Item must also exist\n        if (id && item) {\n            setData({\n                ...item\n            })\n\n        }\n    }, [id, item])\n\n    useEffect(() => {\n        if (savedItem) {\n            history.push('/items')\n        }\n\n    }, [savedItem, history])\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({ ...data, [name]: value })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        save(data)\n    }\n\n    if (redirect === true) {\n        return (<Redirect to=\"/items\" />)\n    }\n\n    return (\n        <div className=\"mt-5 center\">\n            <div className=\"card p-4 shadow\">\n                <h3 className=\"text-center mb-5\">\n                    {data?.id ? 'Edit' : 'add'} Item\n                        <BackComponent url=\"/items\" />\n                </h3>\n                {!isLoading ?\n                    <Form Form onSubmit={handleSubmit}>\n\n                        <input onChange={handleChange} type=\"text\" value={data?.id || ''} name=\"id\" hidden={true} />\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control onChange={handleChange} type=\"text\" placeholder=\"name\" name=\"name\" value={data?.name || \"\"} required={true} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control onChange={handleChange} type=\"number\" placeholder=\"price\" name=\"price\" value={data?.price || \"\"} required={true} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Unit</Form.Label>\n                            <Form.Control as=\"select\" name=\"unitId\" onChange={handleChange} required={true}>\n                                <option >-- Choose --</option>\n                                {\n                                    units.map((e, i) => (\n                                        <option value={e.id} selected={e.id === data?.unit?.id || false} >{e.code}</option>\n                                    ))\n                                }\n                            </Form.Control>\n                        </Form.Group>\n\n                        <input type=\"submit\" className=\"btn btn-success mr-2\" value={data?.id ? 'Update' : 'Submit'} />\n                        <button className=\"btn btn-primary\" onClick={reloadUnit}>Reload</button>\n                    </Form>\n                    : <div>Loading ...</div>}\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // call reducer\n        item: state.findItemById.data,\n        units: state.findAllUnit.data || [],\n        isLoading: state.findItemById.isLoading,\n        savedItem: state.saveItem.data,\n        error: state.findItemById.error,\n    }\n}\n\nconst mapDispatchToProps = { findById, save, allUnit } //call action\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemForm)\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/unit/UnitTable.js",["212"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, ReloadComponent, AddComponent, EditComponent, DeleteComponent } from \"../../components\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Col, Row } from 'react-bootstrap';\n\nconst { SearchBar } = Search;\n\nfunction UnitTable(props) {\n    const columns = [\n        {\n            dataField: 'id',\n            text: '#',\n            headerStyle: () => {\n                return {\n                    width: \"5%\",\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            sort: true\n        },\n        {\n            dataField: 'code',\n            text: 'Code',\n            headerStyle: () => {\n                return {\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            sort: true\n        },\n        {\n            dataField: 'description',\n            text: 'Description',\n            headerStyle: () => {\n                return {\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            sort: true\n        }, {\n            dataField: 'link',\n            text: 'Action',\n            headerStyle: () => {\n                return {\n                    width: \"25%\",\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            formatter: (rowContent, row) => {\n                return (\n                    <Container>\n                        <EditComponent url={`unit/${row.id}/edit`} />\n                        <DeleteComponent onDeleted={props.onDeleted} id={row.id} />\n                        {/* <button onClick={() => props.onDeleted(row.id)} className=\"btn btn-danger\"><FontAwesomeIcon icon={faTrashAlt} /> Delete </button> */}\n                    </Container>\n                )\n            }\n        }\n    ]\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'asc'\n    }];\n\n    return (\n        <ToolkitProvider\n            keyField='id'\n            bootstrap4\n            data={props.units}\n            columns={columns}\n            defaultSorted={defaultSorted}\n            search>\n            {\n                props => (\n                    <div className=\"mb-5\">\n                        <Row>\n                            <Col>\n                                <AddComponent url=\"unit/add\" />\n                                <ReloadComponent onReload={props.onReload} />\n                            </Col>\n                            <Col>\n                                <div className=\"float-right\">\n                                    <SearchBar {...props.searchProps} />\n                                </div>\n                            </Col>\n                        </Row>\n                        <div className=\"mt-2\">\n                            <BootstrapTable\n                                striped\n                                hover\n                                pagination={paginationFactory()}\n                                {...props.baseProps}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n        </ToolkitProvider>\n    )\n}\n\nexport default UnitTable\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/item/ItemTable.js",["213","214"],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/EditComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/DeleteComponent.js",["215"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst DeleteComponent = (props) => {\n    return (\n        <button onClick={() => props.onDeleted(props.id)} className=\"btn btn-danger inline-block\" > <FontAwesomeIcon icon={faTrashAlt} /> Delete </button >\n    )\n}\n\nexport default DeleteComponent\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/index.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/StockList.js",["216","217","218","219","220","221","222"],"import React, { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { findAll, removeById } from '../../actions/stock'\nimport { Link } from 'react-router-dom'\nimport swal from 'sweetalert';\nimport { Container, successComponent, AddComponent, ReloadComponent } from \"../../components\";\nimport StockTable from \"./StockTable\";\n// import UnitTable from \"./UnitTable\";\n\nconst StockList = ({\n    stocks, isLoading, isRemoved, error\n    , findAll, removeById\n    , savedStock\n}) => {\n\n    console.log(\"stock: \" + stocks);\n\n    const onReloadPage = () => {\n        findAll()\n    }\n\n    const onDelete = (id) => {\n        removeById(id)\n    }\n\n    const validationDelete = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover data id: \" + id,\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    onDelete(id)\n                } else {\n                    swal(\"Cancel deleted!\");\n                }\n            });\n    }\n\n    useEffect(() => {\n        onReloadPage()\n    }, [])\n\n    useEffect(() => {\n        if (savedStock) {\n            successComponent()\n        }\n    }, [savedStock])\n\n    useEffect(() => {\n        if (isRemoved) {\n            successComponent()\n            onReloadPage()\n        }\n    }, [error, isRemoved, findAll])\n\n    return (\n        <Container error={error}>\n            <div className=\"mt-3\">\n                <h1>\n                    Stock List\n                </h1>\n\n                <StockTable stocks={stocks} stockItem={stocks.item} isLoading={isLoading} onDeleted={validationDelete} onReload={onReloadPage} />\n            </div>\n        </Container >\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRemoved: state.removeStockById.data,\n        stocks: state.findAllStock.data || [],\n        savedStock: state.saveStock.data,\n        isLoading: state.findAllStock.isLoading || state.removeStockById.loading,\n        error: state.findAllStock.error || state.removeStockById.error,\n    }\n}\n\n\nconst mapDispatchToProps = { findAll, removeById }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StockList)\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/StockForm.js",["223","224"],"import React, { useState, useEffect } from 'react'\nimport { Redirect, useHistory, useParams } from 'react-router-dom'\nimport { findById, save } from \"../../actions/stock\"\nimport { findAll as allItem } from \"../../actions/item\"\nimport { Form } from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { BackComponent } from \"../../components\";\n\nconst StockForm = ({\n    isLoading, stock, items, savedStock,\n    findById, save, allItem\n}) => {\n\n    const { id } = useParams();\n    const [data, setData] = useState({})\n    const [redirect] = useState(false)\n    const history = useHistory();\n\n    const reloadItem = (id) => {\n        findById(parseInt(id))\n        allItem()\n    }\n\n    useEffect(() => {\n        reloadItem()\n    }, [])\n\n    useEffect(() => {\n        if (id) {\n            reloadItem(id)\n        }\n    }, [id, findById])\n\n    useEffect(() => {\n        //check if there is id and Item; if id exist then Item must also exist\n        if (id && stock) {\n            setData({\n                ...stock\n            })\n\n        }\n    }, [id, stock])\n\n    useEffect(() => {\n        if (savedStock) {\n            history.push('/stocks')\n        }\n\n    }, [savedStock, history])\n\n    const handleChange = (e) => {\n        let name = e.target.name\n        let value = e.target.value\n        setData({ ...data, [name]: value })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        save(data)\n    }\n\n    if (redirect === true) {\n        return (<Redirect to=\"/stocks\" />)\n    }\n\n\n    return (\n        <div className=\"mt-5 center\">\n            <div className=\"card p-4 shadow\">\n                <h3 className=\"text-center mb-5\">\n                    {data?.id ? 'Edit' : 'add'} Item\n                            <BackComponent url=\"/stocks\" />\n                </h3>\n                {!isLoading ?\n                    <Form Form onSubmit={handleSubmit}>\n\n                        <input onChange={handleChange} type=\"text\" value={data?.id || ''} name=\"id\" hidden={true} />\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control onChange={handleChange} type=\"number\" placeholder=\"quantity\" name=\"quantity\" value={data?.quantity || \"\"} required={true} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Item</Form.Label>\n                            <Form.Control as=\"select\" name=\"itemId\" onChange={handleChange} required={true}>\n                                <option >-- Choose --</option>\n                                {\n                                    items.map((e, i) => {\n                                        return (\n                                            <option value={e.id} selected={e.id === data?.item?.id || false} >{e.name}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Form.Group>\n\n                        <input type=\"submit\" className=\"btn btn-success mr-2\" value={data?.id ? 'Update' : 'Submit'} />\n                        <button className=\"btn btn-primary\" onClick={reloadItem}>Reload</button>\n                    </Form>\n                    : <div>Loading ...</div>}\n            </div>\n        </div >\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // call reducer\n        stock: state.findStockById.data,\n        items: state.findAllItem.data || [],\n        isLoading: state.findStockById.isLoading,\n        savedStock: state.saveStock.data,\n        error: state.findStockById.error,\n    }\n}\n\nconst mapDispatchToProps = { findById, save, allItem } //call action\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StockForm)\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/sagas/stock.js",["225"],"import { put, takeLatest } from \"redux-saga/effects\"\nimport {\n    FIND_ALL_STOCK, FIND_ALL_STOCK_FAILURE, FIND_ALL_STOCK_SUCCESS,\n    FIND_STOCK_BY_ID, FIND_STOCK_BY_ID_FAILURE, FIND_STOCK_BY_ID_SUCCESS,\n    REMOVE_STOCK_BY_ID, REMOVE_STOCK_BY_ID_FAILURE, REMOVE_STOCK_BY_ID_SUCCESS,\n    SAVE_STOCK, SAVE_STOCK_FAILURE, SAVE_STOCK_SUCCESS,\n} from \"../constants/action\";\nimport axios from \"../configs/api\"\n\nfunction* findAllStock(action) {\n    let uri = `/stocks?`\n    if (action.action) {\n        uri += `page=${action.action.page}`\n    }\n    let result = yield axios.get('/stocks')\n        .then(data => {\n            return ({\n                type: FIND_ALL_STOCK_SUCCESS,\n                data: data.list\n            })\n        })\n        .catch(err => {\n            return ({\n                type: FIND_ALL_STOCK_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\nfunction* findStockById(action) {\n    let result = yield axios.get(`/stocks/${action.id}`)\n        .then(data => {\n            console.log(\"adaw\")\n            return ({\n                type: FIND_STOCK_BY_ID_SUCCESS,\n                data: data\n            })\n        })\n        .catch(err => {\n            return ({\n                type: FIND_STOCK_BY_ID_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\nfunction* saveStock(action) {\n    let model = action.model;\n    let method = 'POST', url = '/stocks';\n    if (model.id) {\n        method = \"PUT\";\n        url += `/${model.id}`\n    }\n\n    let result = yield axios({\n        url: url,\n        method: method,\n        data: model\n    })\n        .then(data => {\n            return {\n                type: SAVE_STOCK_SUCCESS,\n                data: data\n            }\n        })\n        .catch(e => {\n            return {\n                type: SAVE_STOCK_FAILURE,\n                error: e\n            }\n        })\n\n    yield put(result)\n}\n\nfunction* removeStockById(action) {\n    let result = yield axios.delete(`/stocks/${action.id}`)\n        .then(data => {\n            return ({\n                type: REMOVE_STOCK_BY_ID_SUCCESS,\n                data: data.list\n            })\n        })\n        .catch(err => {\n            return ({\n                type: REMOVE_STOCK_BY_ID_FAILURE,\n                error: err\n            })\n        })\n    yield put(result)\n}\n\n\n\nexport function* watchFindAllStock() {\n    yield takeLatest(FIND_ALL_STOCK, findAllStock)\n}\n\nexport function* watchFindStockById() {\n    yield takeLatest(FIND_STOCK_BY_ID, findStockById)\n}\n\nexport function* watchSaveStock() {\n    yield takeLatest(SAVE_STOCK, saveStock)\n}\n\nexport function* watchRemoveStockByid() {\n    yield takeLatest(REMOVE_STOCK_BY_ID, removeStockById)\n}","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/reducers/stock.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/actions/stock.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/pages/stock/StockTable.js",["226"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, ReloadComponent, AddComponent, EditComponent, DeleteComponent } from \"../../components\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Col, Row } from 'react-bootstrap';\n\nconst { SearchBar } = Search;\n\nfunction StockTable(props) {\n    const columns = [\n        {\n            dataField: 'id',\n            text: '#',\n            headerStyle: () => {\n                return {\n                    width: \"5%\",\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            sort: true\n        },\n        {\n            dataField: 'quantity',\n            text: 'Quantity',\n            headerStyle: () => {\n                return {\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            sort: true\n        },\n        {\n            dataField: 'item.name',\n            text: 'Item Name',\n            headerStyle: () => {\n                return {\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            sort: true\n        },\n        {\n            dataField: 'link',\n            text: 'Action',\n            headerStyle: () => {\n                return {\n                    width: \"25%\",\n                    backgroundColor: 'black',\n                    color: 'white'\n                }\n            },\n            formatter: (rowContent, row) => {\n                return (\n                    <Container>\n                        <EditComponent url={`stock/${row.id}/edit`} />\n                        <DeleteComponent onDeleted={props.onDeleted} id={row.id} />\n                        {/* <button onClick={() => props.onDeleted(row.id)} className=\"btn btn-danger\"><FontAwesomeIcon icon={faTrashAlt} /> Delete </button> */}\n                    </Container>\n                )\n            }\n        }\n    ]\n\n    const defaultSorted = [{\n        dataField: 'id',\n        order: 'asc'\n    }];\n\n    return (\n        <ToolkitProvider\n            keyField='id'\n            bootstrap4\n            data={props.stocks}\n            columns={columns}\n            defaultSorted={defaultSorted}\n            search>\n            {\n                props => (\n                    <div className=\"mb-5\">\n                        <Row>\n                            <Col>\n                                <AddComponent url=\"stock/add\" />\n                                <ReloadComponent onReload={props.onReload} />\n                            </Col>\n                            <Col>\n                                <div className=\"float-right\">\n                                    <SearchBar {...props.searchProps} />\n                                </div>\n                            </Col>\n                        </Row>\n                        <div className=\"mt-2\">\n                            <BootstrapTable\n                                striped\n                                hover\n                                pagination={paginationFactory()}\n                                {...props.baseProps}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n        </ToolkitProvider>\n    )\n}\n\nexport default StockTable\n","/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/components/CoroselComponent.js",[],"/home/name/Documents/Enigma/Enigmacamp/reactJS/new/inventory-web/src/validations/CodeValidation.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"235","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"231","severity":1,"message":"236","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"237","line":7,"column":39,"nodeType":"233","messageId":"234","endLine":7,"endColumn":51},{"ruleId":"231","severity":1,"message":"238","line":7,"column":53,"nodeType":"233","messageId":"234","endLine":7,"endColumn":68},{"ruleId":"239","severity":1,"message":"240","line":45,"column":8,"nodeType":"241","endLine":45,"endColumn":10,"suggestions":"242"},{"ruleId":"239","severity":1,"message":"240","line":58,"column":8,"nodeType":"241","endLine":58,"endColumn":35,"suggestions":"243"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"244","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":15},{"ruleId":"231","severity":1,"message":"235","line":2,"column":17,"nodeType":"233","messageId":"234","endLine":2,"endColumn":23},{"ruleId":"231","severity":1,"message":"236","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"245","line":7,"column":21,"nodeType":"233","messageId":"234","endLine":7,"endColumn":29},{"ruleId":"231","severity":1,"message":"237","line":7,"column":49,"nodeType":"233","messageId":"234","endLine":7,"endColumn":61},{"ruleId":"231","severity":1,"message":"238","line":7,"column":63,"nodeType":"233","messageId":"234","endLine":7,"endColumn":78},{"ruleId":"239","severity":1,"message":"240","line":70,"column":8,"nodeType":"241","endLine":70,"endColumn":10,"suggestions":"246"},{"ruleId":"239","severity":1,"message":"240","line":84,"column":8,"nodeType":"241","endLine":84,"endColumn":35,"suggestions":"247"},{"ruleId":"239","severity":1,"message":"248","line":28,"column":8,"nodeType":"241","endLine":28,"endColumn":10,"suggestions":"249"},{"ruleId":"239","severity":1,"message":"248","line":34,"column":8,"nodeType":"241","endLine":34,"endColumn":22,"suggestions":"250"},{"ruleId":"231","severity":1,"message":"236","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"236","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":50,"column":13,"nodeType":"253","messageId":"254","endLine":50,"endColumn":17},{"ruleId":"231","severity":1,"message":"236","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"232","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"235","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"231","severity":1,"message":"236","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"237","line":7,"column":39,"nodeType":"233","messageId":"234","endLine":7,"endColumn":51},{"ruleId":"231","severity":1,"message":"238","line":7,"column":53,"nodeType":"233","messageId":"234","endLine":7,"endColumn":68},{"ruleId":"239","severity":1,"message":"240","line":46,"column":8,"nodeType":"241","endLine":46,"endColumn":10,"suggestions":"255"},{"ruleId":"239","severity":1,"message":"240","line":59,"column":8,"nodeType":"241","endLine":59,"endColumn":35,"suggestions":"256"},{"ruleId":"239","severity":1,"message":"257","line":26,"column":8,"nodeType":"241","endLine":26,"endColumn":10,"suggestions":"258"},{"ruleId":"239","severity":1,"message":"257","line":32,"column":8,"nodeType":"241","endLine":32,"endColumn":22,"suggestions":"259"},{"ruleId":"231","severity":1,"message":"260","line":13,"column":9,"nodeType":"233","messageId":"234","endLine":13,"endColumn":12},{"ruleId":"231","severity":1,"message":"236","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","'AddComponent' is defined but never used.","'ReloadComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onReloadPage'. Either include it or remove the dependency array.","ArrayExpression",["263"],["264"],"'Table' is defined but never used.","'Paginate' is defined but never used.",["265"],["266"],"React Hook useEffect has a missing dependency: 'reloadUnit'. Either include it or remove the dependency array.",["267"],["268"],"no-dupe-keys","Duplicate key 'text'.","ObjectExpression","unexpected",["269"],["270"],"React Hook useEffect has a missing dependency: 'reloadItem'. Either include it or remove the dependency array.",["271"],["272"],"'uri' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"273","fix":"277"},{"desc":"275","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"273","fix":"283"},{"desc":"275","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [onReloadPage]",{"range":"289","text":"290"},"Update the dependencies array to be: [error, isRemoved, findAll, onReloadPage]",{"range":"291","text":"292"},{"range":"293","text":"290"},{"range":"294","text":"292"},"Update the dependencies array to be: [reloadUnit]",{"range":"295","text":"296"},"Update the dependencies array to be: [id, findById, reloadUnit]",{"range":"297","text":"298"},{"range":"299","text":"290"},{"range":"300","text":"292"},"Update the dependencies array to be: [reloadItem]",{"range":"301","text":"302"},"Update the dependencies array to be: [id, findById, reloadItem]",{"range":"303","text":"304"},[1177,1179],"[onReloadPage]",[1413,1440],"[error, isRemoved, findAll, onReloadPage]",[1977,1979],[2214,2241],[761,763],"[reloadUnit]",[850,864],"[id, findById, reloadUnit]",[1239,1241],[1477,1504],[741,743],"[reloadItem]",[830,844],"[id, findById, reloadItem]"]